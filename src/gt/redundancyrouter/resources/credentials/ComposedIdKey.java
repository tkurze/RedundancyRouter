package gt.redundancyrouter.resources.credentials;

import java.io.Serializable;
import java.util.StringTokenizer;

public class ComposedIdKey implements Serializable
{
	private static final long serialVersionUID = 1L;
	public String user;
    public String provider;

    public ComposedIdKey ()
    {
    }

    /**
     * Constructor accepting same input as generated by toString().
     */
    public ComposedIdKey(String value) 
    {
        StringTokenizer token = new StringTokenizer (value, "::");
        token.nextToken();               // className
        this.user = token.nextToken(); // field1
        this.provider = token.nextToken(); // field2
    }

    public boolean equals(Object obj)
    {
        if (obj == this)
        {
            return true;
        }
        if (!(obj instanceof ComposedIdKey))
        {
            return false;
        }
        ComposedIdKey c = (ComposedIdKey)obj;

        return user.equals(c.user) && provider.equals(c.provider);
    }

    public int hashCode ()
    {
        return this.user.hashCode() ^ this.provider.hashCode();
    }

    public String toString ()
    {
        // Give output expected by String constructor
        return this.getClass().getName() + "::"  + this.user + "::" + this.provider;
    }
}